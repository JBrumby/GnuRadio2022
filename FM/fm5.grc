options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: FM_5
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Test mit hackrf und pluto gleichzeitig
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 20.0]
    rotation: 0
    state: enabled

blocks:
- name: agc
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': 'False'
    gui_hint: ''
    label: automatic gain Control
    'true': 'True'
    type: int
    value: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1480, 2132.0]
    rotation: 0
    state: true
- name: bbamp
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: "Baseband-Verst\xE4rkung"
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '47'
    value: '24'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 2128.0]
    rotation: 0
    state: true
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Frrequenz
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: 88e6
    step: 1e4
    stop: 108e6
    value: freq1
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 1244.0]
    rotation: 0
    state: true
- name: freq1
  id: variable
  parameters:
    comment: ''
    value: 89.0e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 1156.0]
    rotation: 0
    state: true
- name: ifamp
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: "IF Zwischenfrequenz Verst\xE4rkung"
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '40'
    value: '20'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 2128.0]
    rotation: 0
    state: true
- name: rfamp
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: "Eingangsverst\xE4rkung"
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '15'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 2128.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 2e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 260.0]
    rotation: 0
    state: enabled
- name: volume
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Volume
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '.2'
    stop: '5'
    value: '1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 3596.0]
    rotation: 0
    state: true
- name: analog_wfm_rcv_0
  id: analog_wfm_rcv
  parameters:
    affinity: ''
    alias: ''
    audio_decimation: '10'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    quad_rate: '500000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 2988.0]
    rotation: 0
    state: true
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 4236.0]
    rotation: 0
    state: true
- name: blocks_correctiq_0
  id: blocks_correctiq
  parameters:
    affinity: ''
    alias: DC
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 1720.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: volume
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 3732.0]
    rotation: 0
    state: true
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: 1e5
    decim: '4'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: 5e3
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 2492.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: "Hier wird im ersten Schritt festglegt, wie \n- das erzeugte Programm\
      \ hei\xDFt\n- wie der Name des Programms im Hauptfenster sein soll\n- in welche\
      \ Sprache das Programm \xFCbersetzt werden soll (Python oder C++)\n- welches\
      \ libraries f\xFCr die grafische Darstelung benutzt werden sollen (QT, wx, none)"
    note: Programm-Optionen
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 20.0]
    rotation: 0
    state: true
- name: note_1
  id: note
  parameters:
    alias: ''
    comment: "Jeder Gnu Radio Block arbeitet mit einer festen Sample_rate. \nSie muss\
      \ an die Leistung des Rechners angepasst werden, damit sich das Programm nicht\
      \ verschluckt.\n\nWenn ein Programm gestartet ist, kann man unten links in der\
      \ Textausgabe sehen, \nob der Computer schnell genug f\xFCr die Verarbeitung\
      \ ist, je mehr 'UO' auftauchen desto mehr Datenpakete gehen verloren."
    note: Bandbreite
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 260.0]
    rotation: 0
    state: true
- name: note_10
  id: note
  parameters:
    alias: ''
    comment: "In diesem Block, werden nun Frequenz\xE4nderungen in Pegel\xE4nderungen\
      \ umgewandelt.\n\nSeine sampling rate muss eingestellt auf die sampling_rate\
      \ (Bandbreite) eingestellt werden, die aus dem vorhergehenden Block kommt.\n\
      Also: \n- der  Empfangsblock hat die Bandbreite \"samp_rate\"\n- der Tiefpass\
      \ hat enen eingebauten Resampler, der de Datenrate decimation 4 auf auf ein\
      \ viertel reuziert.\nAlso Empf\xE4ngerbandbreite 2 MHz, Decimation 4 ergibt\
      \ eine sampling_rate = Quadratur-rate von 500KHz\n\nIn diesem Block ist ebenfalls\
      \ ein Resampler eingebaut, der mit der EInstellung 10 f\xFCr decimation die\
      \ Eingangsdatenrate von 500Hz auf 50 KHz umrechnet."
    note: FM-Decoder
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 2988.0]
    rotation: 0
    state: true
- name: note_11
  id: note
  parameters:
    alias: ''
    comment: "wenn dieses Gui-Element \"enabled\" wird, sieht man die reduzierte Bandbreiite\
      \ mit den \xFCbriggebliebenen Nutzdaten."
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 2876.0]
    rotation: 0
    state: true
- name: note_12
  id: note
  parameters:
    alias: ''
    comment: 'Mit diesem Resampler wird die Datenraten von 50KHz auf die sampling_rate
      von 48khz deer Soundkarte umgerechnet.

      Dazu wird durch 50 geteilt und dann 48 multipliziert.'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 3236.0]
    rotation: 0
    state: true
- name: note_13
  id: note
  parameters:
    alias: ''
    comment: "Durch diesen Mulitplyer kann die Lauts\xE4rke des Signals  eingestellt\
      \ werden.\n1 = ohne Verst\xE4rkung / Abschw\xE4chung"
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 3732.0]
    rotation: 0
    state: true
- name: note_14
  id: note
  parameters:
    alias: ''
    comment: "Hier ist nun endlich die Eingangsbandbreite des Empf\xE4ngers auf die\
      \ Bandbreite des Der Soundkarte heruntergerechnet."
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 4228.0]
    rotation: 0
    state: true
- name: note_15
  id: note
  parameters:
    alias: ''
    comment: "It is not necessary to identify the SDR if only one is connected to\
      \ the \nprocessing board. For the gains, it is necessary to make tests to find\
      \ \nthe good values according to the model of SDR.\n\nNote On Hack RF Gains\n\
      HackRF One provides:\nRX : three different analog gain controls\nRF (\u201C\
      amp\u201D, 0 or 14 dB),\nIF (\u201Clna\u201D, 0 to 40 dB in 8 dB steps),\nbaseband\
      \ (\u201Cvga\u201D, 0 to 62 dB in 2 dB steps)\nTX : two gain controls\nRF (0\
      \ or 14 dB) ,\nIF (0 to 47 dB in 1 dB steps)\n\n(https://f1atb.fr/index.php/2020/08/06/hackrf-orange-pi-gnuradio-setup/)\n\
      \nAlle Verst\xE4rkungen rf, f und bb auf 0 bringen erste Erfolge\n\nff: 0\n\
      if 20\nbb 24\nAussderm liegt mein hackrf sehr neben der Spur ungef\xE4hr 700khz\
      \ ??, Jetzt geht es.\nfunktioniert!\neine RF = 14 erzeugt KEIEN Verst\xE4rkung\
      \ bei mir, sondern es rauscht nur. Das heist rg geht bei nur von 0-13"
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 1916.0]
    rotation: 0
    state: true
- name: note_16
  id: note
  parameters:
    alias: ''
    comment: "Remove DC-Spike ist die L\xF6sung \xFCberhaupt etwas auf der centerfrequenz\
      \ \nzu emofangen. d.b. Meine Konzept ohne Mischer, der einen  \nFrequenzoffset\
      \ neben der Centerfrequenz einstellt hat, mir das Bein gestellt.\n\nhttps://www.rtl-sdr.com/wp-content/uploads/2017/02/Getting-rid-of-that-center-frequency-spike-in-gnuradio_07.pdf\n\
      \nHeureka\n\nDiese L\xF6sung gen\xFCgt aber nicht, um dden Empfang hier v\xF6\
      lling st\xFCrungsfrei \nzu machen. dazu muss mann neben die Null-Herz Stelle\
      \ abstimmen."
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 1724.0]
    rotation: 0
    state: true
- name: note_17
  id: note
  parameters:
    alias: ''
    comment: "Diese Einstsellregler erzeugen Variablen, die in diesem Programm\nnur\
      \ f\xFCr \"Osmocon Source\" verwendet werden, um dem Problem\ndes nicht funktionierenden\
      \ Empfangs auf die Spur zu kommen."
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1712, 2140.0]
    rotation: 0
    state: true
- name: note_2
  id: note
  parameters:
    alias: ''
    comment: "Sampling-Rate muss f\xFCr jeden Block stimmen!\n\nDie Bandbreite des\
      \ Empfangsblocks bestimmt nach der Nyquist-Rate\nwie breit der Empfangsbereich\
      \ des SDR ist.\nAlso wie breit der Frequenzbereich der auf einmal empfangen\
      \ werden kann und optisch im Frequenz-Wasserfalls dargestellt werden kann."
    note: "Sampling-Rate muss f\xFCr jeden Block stimmen!"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 404.0]
    rotation: 0
    state: true
- name: note_3
  id: note
  parameters:
    alias: ''
    comment: "Ich bin oft bei meinen Gnu Radio Experimenten gescheitert, weil\ndie\
      \ Beispiele nicht funktionierten.\nEs kam einfach kein Audio aus dem Beispiel\
      \ und ich wusste nicht woaran das liegt.\n\nKurz gesagt liegt es daran, dass\
      \ entweder:\n- die Sample-Rates der verschiedenen Blocks nicht zusammen passen\n\
      - oder, dass die Ein- und Ausgangspegel der Blocks nicht zusamme passen\n- dass\
      \ mein Rechner zu schwachbr\xFCstig war f\xFCr die optimistischen Einstellungen\
      \ des Erstellers eines Beispiel\n\nL\xF6sungen:\n-  Ich reduziere die Bandbreite\
      \ m\xF6glichst weit, damit das Programm auch auf langsamer Harware l\xE4uft.\n\
      -  Ich berechne die Sampling-rate der verschiedenen Stufen und mache sie so\
      \ voneinander abh\xE4ngig.\nalso wenn wir von einer samplingrate on 48Khz (48e3)\
      \ ausgehen k\xF6nnen,\nergibt sich sampling-rate des Empfangsmoduls das in der\
      \ Kette davor steht als ein ganzzahliges vielfaches davon. \nzum Beispiel: samp_rate=\
      \ 10 * audio_samp_rate\n\nDie Sampling-rate eines Blocks muss auf die Sampling-Raate\
      \ des n\xE4chsten folgenden Blocks umgerechnet werden. \n- In manchen Blocks\
      \ kann man das einstellen (decimation und multiply)\n- oder es wird ein \"rational\
      \ resampler\" dazwischen gesetzt, der genau diese Umrechnung vornimmt."
    note: "welchen Empfangsblock ben\xF6tige ich?"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 684.0]
    rotation: 0
    state: true
- name: note_4
  id: note
  parameters:
    alias: ''
    comment: "Bei einem SDR wird die Gesamtbandbreite des Empf\xE4ngersr auf einen\
      \ Wasserfall gegeben, \ndamit man sieht, wo im Empfangsbereich intererssante\
      \ Sgnale sind. \n(Siehe direkter Anschluss des Blocks \"QT-Gui-Sink\" an den\
      \ Empfangsblock)\n\nNormalerweise w\xFCrde dann ein Mischer folgen, der bei\
      \ feststehender Center-Frequence des Wasserfalls \ndas gew\xFCnschte Signal\
      \ durch Mischung in den Bereich des Tiefpassfilters holt. \nIn diesem Design\
      \ ist der Mischer nicht eingebaut, um das Progamm m\xF6glichst einfach zu halten."
    note: Beispiel-Design
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 1660.0]
    rotation: 0
    state: true
- name: note_5
  id: note
  parameters:
    alias: ''
    comment: "Hier wird die gew\xFCnschte Frequenz eingestellt, auf die der Empf\xE4\
      nger bei Programmstart eingestellt wird.\n89.0MHz ist bei mir einfach der st\xE4\
      rkste Lokalsender"
    note: freq1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 1156.0]
    rotation: 0
    state: true
- name: note_6
  id: note
  parameters:
    alias: ''
    comment: 'Hier wird ein Schieberegler erzeugt, mit dem man die Empfangsfrequenz
      des radios einstellen kann.

      Das Ergebnis wird als Vairable mit der ID: freq bereit gestellt.'
    note: Abstimmbereich
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 1244.0]
    rotation: 0
    state: true
- name: note_7
  id: note
  parameters:
    alias: ''
    comment: "Durch anklicken eines der drei Empf\xE4ngerblocks kann mit einem Rechtsklick\n\
      einer der Bl\xF6cke \"enabled\" wwerden. Die anderen m\xFCssen disablet werden,\
      \ sonst kann das \nProgramm nicht mehr kompiliert werden, weil dem einem Eingang\
      \ des Low-Pass-Filters mehrere Ausg\xE4nge zugeordnet sind."
    note: "Auswahl Empf\xE4nger"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 1828.0]
    rotation: 0
    state: true
- name: note_8
  id: note
  parameters:
    alias: ''
    comment: "Der Empfangsblock hat die Centerfrequenz bereits auf 0 Hz heruntergerechnet,\
      \  \nWir haben also einen Bereich der Bandbreite samling_rate in und der frequenz\
      \ freq umgerechnet in den Bereich centerfreq - ceenter_frequ = 0Hz heruntergerechnet.\n\
      Die Bandbreite (samp_rate) blieb dabei komplett erhalten.\n\nwir filtern mit\
      \ dem Teifpass alles weg, was wir nicht ben\xF6tigen.\nWir erhalten daraus einen\
      \ Frequenzband mit der Bandbreite samp_rate in dem beii voller Datenrate nur\
      \ die Daten in den Frequenzen fehlen, die wir herausgefiltert haben.\n\nsp\xE4\
      ter kann dann mit einem Resampler die Banndbreite des Signals verkleinert werden,\
      \ damit der Rechner von der Bearbetung dieser jeetzt fehlenden Daten  zu befreien.\n\
      (Nur weil in einem \xFCbertragenen Frequenzband keine Signale mehr sind, wir\
      \ das Frequenzband trotzdem in seiner gesamten Breite weitergegeben und muss\
      \ verarbetet werden. Dei tats\xE4chnlcihe Reduzierung\nfindet erst durch das\
      \ resamplen statt.\n\nAchtung: im \"Low-pass-Filter\" ist eine resampler enthalten.\
      \ Der ist hier auf eine Teilugsrate von 4 eingestellt. Aus diesem speziellen\
      \ Filter kommt damit bereits nur noch ein viertel der Bandbreite!\n\nWarum den\
      \ Filter?\nDa die Bandbreite eines Signals in direktem Zusammenhang mit der\
      \ \xFCbertragbaren Frequenz steht, w\xFCrde bei der nachfolgenden Umrechnen\
      \ der Sampling_rate ohne Filter rein zuf\xE4llige Pegel aus den h\xF6heren Frequenzen\
      \ durch die neue Abtastrate auf\ndas Nutzsignal aufgetragen. Durch das Filter\
      \ sind diese Daten weg und k\xF6nnen so das Ausgangssignal nicht mehr beeinflussen.\n\
      \nIch habe hieir mit dem Gain-Multiplikater = 0.7 die Signalst\xE4rker eduziert,\
      \ weil bei mir das Empfangssignal v\xF6llig \xFCbersteuert war. Ich bin mir\
      \ nicht sicher, ob das nicht schon im Empfangsblock h\xE4tte passieren m\xFC\
      ssen. \nDort hatte ich jedoch AGC eingestellt, deshalb sollte die St\xE4rke\
      \ der Signale dort passen."
    note: Low-Pass-Filter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 2500.0]
    rotation: 0
    state: true
- name: note_9
  id: note
  parameters:
    alias: ''
    comment: Der Empfangsblock verschiebt wie ein Direktmischer den empfangenenen
      Bereich mit der Bandbreite samp_rate von der centerfrequenz "freq" nach 0 Hz.
    note: Frequenz des Empfangsblocks
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 1932.0]
    rotation: 0
    state: true
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: hackrf=0
    bb_gain0: bbamp
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '2'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: rfamp
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: agc
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: ifamp
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 1964.0]
    rotation: 0
    state: enabled
- name: qtgui_histogram_sink_x_0
  id: qtgui_histogram_sink_x
  parameters:
    accum: 'False'
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    bins: '100'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'True'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '1'
    xmin: '-1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 3900.0]
    rotation: 0
    state: true
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: freq
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: Gesamtbandbreite nach dem Empfangsblock
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'False'
    type: complex
    wintype: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 2300.0]
    rotation: 0
    state: true
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate/4
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: freq1/4
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: Nach dem Filter
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.10'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 2884.0]
    rotation: 0
    state: disabled
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '50'
    fbw: '0'
    interp: '48'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 3236.0]
    rotation: 0
    state: true
- name: rtlsdr_source_0
  id: rtlsdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: '"rtl=0"'
    bb_gain0: '20'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: '10'
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'True'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2532.0]
    rotation: 0
    state: disabled
- name: soapy_plutosdr_source_0
  id: soapy_plutosdr_source
  parameters:
    affinity: ''
    agc: '1'
    alias: ''
    bandwidth: '0.0'
    center_freq: freq
    comment: ''
    dev_args: ip:pluto.local
    gain: '45'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2388.0]
    rotation: 0
    state: disabled

connections:
- [analog_wfm_rcv_0, '0', rational_resampler_xxx_0, '0']
- [blocks_correctiq_0, '0', low_pass_filter_0, '0']
- [blocks_correctiq_0, '0', qtgui_sink_x_0, '0']
- [blocks_multiply_const_xx_0, '0', audio_sink_0, '0']
- [blocks_multiply_const_xx_0, '0', qtgui_histogram_sink_x_0, '0']
- [low_pass_filter_0, '0', analog_wfm_rcv_0, '0']
- [low_pass_filter_0, '0', qtgui_waterfall_sink_x_0, '0']
- [osmosdr_source_0, '0', blocks_correctiq_0, '0']
- [rational_resampler_xxx_0, '0', blocks_multiply_const_xx_0, '0']
- [rtlsdr_source_0, '0', low_pass_filter_0, '0']
- [rtlsdr_source_0, '0', qtgui_sink_x_0, '0']
- [soapy_plutosdr_source_0, '0', low_pass_filter_0, '0']
- [soapy_plutosdr_source_0, '0', qtgui_sink_x_0, '0']

metadata:
  file_format: 1
